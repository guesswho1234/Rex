<<echo=FALSE, results=hide>>=

## 

## ESSENTIALS!!! MUST ALWAYS BE PRESENT AND COMPLETE! DO NOT FORGET TO CHECK AND MODIFY!!!
prec <- 4 # PRECISION
diff <- 1 # DIFFICULTY (0-3)
if (MAKEBSP) set.seed(1) # FIXES SCRAMBLING FOR EXAMPLES
## ESSENTIALS!!! MUST ALWAYS BE PRESENT AND COMPLETE! DO NOT FORGET TO CHECK AND MODIFY!!!

## Definitions
zinsartList <- c("stetige Verzinsung", "diskrete Verzinsung")

repeat {
  ## Calculations
  rand <- sample(1:3, 3)
  rand <- c(2, sample(c(1, 3)), 2)
  i <- sort(sample(5:30, 3) / 1000)[rand]
  n1 <- sample(1:3, 1)
  n2 <- sample(n1 + 1:5, 1)
  na <- c(0, n1, 0)[rand]
  nb <- c(n1, n2, n2)[rand]
  f <- c(-1, -1, 1)[rand]
  if (rand[3] == 3) f <- c(1, 1, 1)
  case <- sample(1:length(zinsartList), 1)


  res_c1 <- ((i[1] * ((nb[1] - na[1]) * f[1]) + i[2] * ((nb[2] - na[2]) * f[2])) / (nb[3] - na[3])) * 100
  if (round(res_c1, 4) == round(res_c1, 2)) next
  res_c2 <- (((1 + i[1])^((nb[1] - na[1]) * f[1]) * (1 + i[2])^((nb[2] - na[2]) * f[2]))^(1 / (nb[3] - na[3])) - 1) * 100

  if (case == 1) {
    correct_result <- res_c1
    distractor <- res_c2
  } else {
    correct_result <- res_c2
    distractor <- res_c1
  }
  ## Distractors
  # one distractor is calculated above, we add 3 random distractors
  dev <- 0.02
  random_distractors <- getRandomDistractors(3, range = c(correct_result * (1 - dev), correct_result * (1 + dev)), digits = prec, exclude = c(correct_result, distractor))
  all_choices <- c(correct_result, distractor, random_distractors)
  if (min(dist(all_choices)) > 0.0001) break
}
all_choices


choices <- paste(eform(all_choices, digits = prec), "Prozent")

## Solution
solutions <- c(TRUE, FALSE, FALSE, FALSE, FALSE)

# shufflt 4 Antworten aus dem pool
sel <- sample(1:length(choices), 4)

# Fuegt keine der anderen Antworten... hinzu
choices[length(choices) + 1] <- "Keine der anderen Antworten ist korrekt"
solutions[length(solutions) + 1] <- sum(solutions[sel]) == 0
sel <- sample(c(sel, length(choices)), 5)

choices <- choices[sel]
solutions <- solutions[sel]

## Question
zins1 <- fwform(i[1], nb[1], na[1])
zins2 <- fwform(i[2], nb[2], na[2])
zins3 <- fwname(nb[3], na[3])

quest <- paste0("Gegeben ist ", zins1, " sowie ", zins2, " (", zinsartList[case], "). Wie hoch ist ", zins3, "?")
@
\begin{question}
\Sexpr{quest}
\Sexpr{sig(c("num", "sc"), prec)}

<<echo=FALSE, results=tex>>=
answerlist(choices)
@
\end{question}

\begin{solution}
<<echo=FALSE, results=tex>>=
answerlist(ifelse(solutions, "Richtig", "Falsch"))
@
\end{solution}


%% META-INFORMATION
%% \extype{mchoice}
%% \exsolution{\Sexpr{mchoice2string(solutions)}}
%% \expoints{\Sexpr{getDifficulty(diff)}}
%% \exextra[authoredBy,character]{Florian Hauser,Christian KÃ¶nig}
%% \exextra[checkedBy,character]{Michael Razen}
%% \exextra[topic,character]{Zinsstruktur}
%% \exextra[tags,character]{}
%% \exextra[difficulty,numeric]{1}
%% \exextra[precision,numeric]{4}
